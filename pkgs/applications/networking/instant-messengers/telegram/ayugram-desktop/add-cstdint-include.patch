diff --git a/Telegram/lib_webview/webview/webview_interface.h b/Telegram/lib_webview/webview/webview_interface.h
index 45242c1..efc39a8 100644
--- a/Telegram/lib_webview/webview/webview_interface.h
+++ b/Telegram/lib_webview/webview/webview_interface.h
@@ -5,11 +5,11 @@
 // https://github.com/desktop-app/legal/blob/master/LEGAL
 //
 #pragma once
-
+#include <cstdint>
+#include <functional>
 #include <memory>
-#include <string>
 #include <optional>
-#include <functional>
+#include <string>

 #include <QtGui/QColor>

@@ -21,7 +21,8 @@ namespace Webview {

 class DataStream;

-struct ThemeParams {
+struct ThemeParams
+{
 	QColor opaqueBg;
 	QColor scrollBg;
 	QColor scrollBgOver;
@@ -30,7 +31,8 @@ struct ThemeParams {
 	QByteArray json;
 };

-class Interface {
+class Interface
+{
 public:
 	virtual ~Interface() = default;

@@ -51,16 +53,17 @@ public:

 	virtual QWidget *widget() = 0;
 	virtual void *winId() = 0;
-
 };

-enum class DialogType {
+enum class DialogType
+{
 	Alert,
 	Confirm,
 	Prompt,
 };

-struct DialogArgs {
+struct DialogArgs
+{
 	QWidget *parent = nullptr;
 	DialogType type = DialogType::Alert;
 	std::string value;
@@ -68,36 +71,41 @@ struct DialogArgs {
 	std::string url;
 };

-struct DialogResult {
+struct DialogResult
+{
 	std::string text;
 	bool accepted = false;
 };

-struct DataResponse {
+struct DataResponse
+{
 	std::unique_ptr<DataStream> stream;
 	std::int64_t streamOffset = 0;
 	std::int64_t totalSize = 0;
 };

-struct DataRequest {
+struct DataRequest
+{
 	std::string id;
 	std::int64_t offset = 0;
 	std::int64_t limit = 0; // < 0 means "Range: bytes=offset-" header.
 	std::function<void(DataResponse)> done;
 };

-enum class DataResult {
+enum class DataResult
+{
 	Done,
 	Pending,
 	Failed,
 };

-struct Config {
+struct Config
+{
 	QWidget *parent = nullptr;
 	void *window = nullptr;
 	QColor opaqueBg;
 	std::function<void(std::string)> messageHandler;
-	std::function<bool(std::string,bool)> navigationStartHandler;
+	std::function<bool(std::string, bool)> navigationStartHandler;
 	std::function<void(bool)> navigationDoneHandler;
 	std::function<DialogResult(DialogArgs)> dialogHandler;
 	std::function<DataResult(DataRequest)> dataRequestHandler;
@@ -105,8 +113,10 @@ struct Config {
 	bool debug = false;
 };

-struct Available {
-	enum class Error {
+struct Available
+{
+	enum class Error
+	{
 		None,
 		NoWebview2,
 		NoWebKitGTK,
@@ -119,9 +129,7 @@ struct Available {
 void ParseRangeHeaderFor(DataRequest &request, std::string_view header);

 [[nodiscard]] Available Availability();
-[[nodiscard]] inline bool Supported() {
-	return Availability().error == Available::Error::None;
-}
+[[nodiscard]] inline bool Supported() { return Availability().error == Available::Error::None; }
 [[nodiscard]] bool SupportsEmbedAfterCreate();

 // HWND on Windows, nullptr on macOS, GtkWindow on Linux.
